# https://community.home-assistant.io/t/what-am-i-doing-wrong-parsing-json/496038/3
substitutions:
  node_name: doorlocksgooberv1
  friendly_name: Door Locks Goober V1
  area: Dan Room
  comment: "This is the first attempt at converting door lock functionality to ESPHome at Albion"
  box_config_file_name: prod_door_locks_goober_v1
  battery_sensor_update_interval: "60s"
  front_door_lock_url: !secret front_door_lock_url
  back_door_lock_url: !secret back_door_lock_url
  milanais_username: !secret milanais_username
  milanais_password: !secret milanais_password

packages:
  esphome: !include common/default_esphome.yaml
#  logging: !include common/default_logger.yaml
  logging: !include common/debug_logger.yaml
  wifi: !include common/wifi.yaml
  esp32: !include common/m5atom_device.yaml
  light: !include { file: common/atom_light.yaml, vars: { light_pin: 27 } }
  reset_button: !include common/reset_button.yaml
  networking: !include common/networking.yaml
  http: !include common/http.yaml
  version: !include common/version.yaml
  wifi_info: !include common/wifi_info.yaml
  uptime: !include common/uptime.yaml
  wifi_signal_sensor: !include common/wifi_signal_sensor.yaml
  status_sensor: !include common/status_sensor.yaml
  internal_temp: !include common/internal_temp.yaml
  dashboard_import: !include common/default_dashboard_import.yaml
  albion_boxes_info: !include common/albionboxes_info.yaml
  button: !include { file: common/default_atom_button.yaml, vars: { button_pin: 39 } }

# https://esphome.io/components/lock/index.html
# https://esphome.io/components/lock/template

switch:
  # https://esphome.io/components/switch/template.html
  - platform: template
    name: "${friendly_name} Enable Lock Pings Switch"
    id: enable_lock_pings_switch
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    assumed_state: false
#    turn_off_action:
#      - switch.turn_off: turntable_motor_relay

sensor:
  # https://esphome.io/components/sensor/template
  - platform: template
    name: "Front Door Lock Battery Sensor"
    id: front_door_lock_battery_sensor
    unit_of_measurement: "%"
    device_class: "battery"
    icon: mdi:battery-50-bluetooth
#    lambda: |-
#      if (id(some_binary_sensor).state) {
#        return 42.0;
#      } else {
#        return 0.0;
#      }
#    update_interval: "${battery_sensor_update_interval}"
  # https://esphome.io/components/sensor/template
  - platform: template
    name: "Back Door Lock Battery Sensor"
    id: back_door_lock_battery_sensor
    unit_of_measurement: "%"
    device_class: "battery"
    icon: mdi:battery-50-bluetooth
#    lambda: |-
#      if (id(some_binary_sensor).state) {
#        return 42.0;
#      } else {
#        return 0.0;
#      }
#    update_interval: "${battery_sensor_update_interval}"

# https://esphome.io/components/interval.html
interval:
  - interval: "${battery_sensor_update_interval}"
    then:
      - if:
          condition:
            switch.is_off: enable_lock_pings_switch
          then:
            - lambda: |-
                ESP_LOGD("front_door_sensor_interval_ping", "Skipping real work because ping flag is off");
          else:
            - logger.log:
                format: "Starting check on front door lock battery"
                level: DEBUG
            # https://esphome.io/components/http_request.html
            - http_request.post:
                url: "${front_door_lock_url}"
                headers:
                  Content-Type: application/json
                json:
                  username: "${milanais_username}"
                  password: "${milanais_password}"
                capture_response: true
                on_response:
                  then:
                    - logger.log:
                        format: 'Front door response status: %d, Duration: %u ms'
                        level: DEBUG
                        args:
                          - response->status_code
                          - response->duration_ms
                    - lambda: |-
                        json::parse_json(body, [](JsonObject root) -> bool {
                            id(front_door_lock_battery_sensor).publish_state(root["wyze_response"]["battery"]);
                            return true;
                        });
            - logger.log:
                format: "Finishing check on front door lock battery"
                level: DEBUG
  - interval: "${battery_sensor_update_interval}"
    then:
      - if:
          condition:
            switch.is_off: enable_lock_pings_switch
          then:
            - lambda: |-
                ESP_LOGD("back_door_sensor_interval_ping", "Skipping real work because ping flag is off");
          else:
            - logger.log:
                format: "Starting check on back door lock battery"
                level: DEBUG
            # https://esphome.io/components/http_request.html
            - http_request.post:
                url: "${back_door_lock_url}"
                headers:
                  Content-Type: application/json
                json:
                  username: "${milanais_username}"
                  password: "${milanais_password}"
                capture_response: true
                on_response:
                  then:
                    - logger.log:
                        format: 'Back door response status: %d, Duration: %u ms'
                        level: DEBUG
                        args:
                          - response->status_code
                          - response->duration_ms
                    - lambda: |-
                        json::parse_json(body, [](JsonObject root) -> bool {
                            id(back_door_lock_battery_sensor).publish_state(root["wyze_response"]["battery"]);
                            return true;
                        });
            - logger.log:
                format: "Finishing check on back door lock battery"
                level: DEBUG
