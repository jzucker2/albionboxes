substitutions:
  node_name: fbshowerspeakerzv3
  friendly_name: Full Bath ShowerSpeakerz V3
  area: Full Bath
  comment: "For controlling the ShowerSpeakerz direct playing playlists to them"
  box_config_file_name: prod_full_bath_shower_speakerz_buttons_v3
  rufus_url: !secret rufus_url
  media_id: "spotify://album/2AlPRfYeskAMxhJS00xjeP"
  media_type: "album"
  target_device_entity_id: "media_player.showerspeakerz_upnp_3"

packages:
  esphome: !include common/default_esphome.yaml
  logging: !include common/s3_logger.yaml
  wifi: !include common/wifi.yaml
  esp32: !include common/m5atoms3lite_device.yaml
  reset_button: !include common/reset_button.yaml
  networking: !include common/networking.yaml
  http: !include common/http.yaml
  light: !include { file: common/atom_light.yaml, vars: { light_pin: 35 } }
  version: !include common/version.yaml
  wifi_info: !include common/wifi_info.yaml
  uptime: !include common/uptime.yaml
  wifi_signal_sensor: !include common/wifi_signal_sensor.yaml
  status_sensor: !include common/status_sensor.yaml
  dashboard_import: !include common/default_dashboard_import.yaml
  albion_boxes_info: !include common/albionboxes_info.yaml
  internal_temp: !include common/internal_temp.yaml
  button: !include { file: common/default_atom_button.yaml, vars: { button_pin: 41 } }
  rufus_activity_request: !include common/rufus_activity_request.yaml

# ${rufus_url}/api/v1/activities/kitchen-lights-on
# ${rufus_url}/api/v1/activities/kitchen-lights-off
# ${rufus_url}/api/v1/activities/full-bath-music-lights
# ${rufus_url}/api/v1/activities/full-bath-music-lights-off

## Device-specific

text_sensor:
  # https://esphome.io/components/text_sensor/homeassistant.html
  - platform: homeassistant
    name: "${friendly_name} Media Type"
    id: media_type_text_sensor
    entity_id: input_text.showerspeakerz_media_type
  # https://esphome.io/components/text_sensor/homeassistant.html
  - platform: homeassistant
    name: "${friendly_name} Media ID"
    id: media_id_text_sensor
    entity_id: input_text.showerspeakerz_media_id
#  # https://esphome.io/components/text_sensor/template.html
#  - platform: template
#    name: "${friendly_name} Media Type"
#    id: media_type_text_sensor
#  # https://esphome.io/components/text_sensor/template.html
#  - platform: template
#    name: "${friendly_name} Media ID"
#    id: media_id_text_sensor

binary_sensor:
  - platform: gpio
    pin:
      number: 2
      inverted: true
    name: "${friendly_name} Red Button"
    on_press:
      then:
        - logger.log: "Red Button Clicked started"
        - script.execute:
            id: rufus_activity_request
            rufus_url: "${rufus_url}"
            activity: "full-bath-music-lights-off"
        # https://esphome.io/components/api.html#homeassistant-service-action
        # https://community.home-assistant.io/t/service-calls-through-native-api/374038/2
        - homeassistant.service:
            service: media_player.turn_off
            data:
              entity_id: "${target_device_entity_id}"
        - logger.log: "Red Button Clicked done"

  - platform: gpio
    pin:
      number: 1
      inverted: true
    name: "${friendly_name} Blue Button"
    on_press:
      then:
        - logger.log: "Blue Button Clicked started"
        - script.execute:
            id: rufus_activity_request
            rufus_url: "${rufus_url}"
            activity: "full-bath-music-lights"
        # https://esphome.io/components/api.html#homeassistant-service-action
        # https://community.home-assistant.io/t/service-calls-through-native-api/374038/2
#        - homeassistant.service:
#            service: mass.play_media
#            data:
#              entity_id: "${target_device_entity_id}"
#              media_id: "${media_id}"
#              media_type: "${media_type}"
        - homeassistant.service:
            service: mass.play_media
            data_template:
              entity_id: "${target_device_entity_id}"
              media_id: "{{ my_media_id }}"
              media_type: "{{ my_media_type }}"
            variables:
              my_media_id: |-
                return id(media_id_text_sensor).state;
#                return id(media_id_text_sensor).c_str();
              my_media_type: |-
                return id(media_type_text_sensor).state;
#                return id(media_type_text_sensor).c_str();
        - logger.log: "Blue Button Clicked done"
